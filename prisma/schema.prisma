
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Usuario {
  id                String    @id @default(cuid())
  nome              String
  email             String    @unique
  hashedPassword    String?
  fotoUrl           String?
  isAtivo           Boolean   @default(true)
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  ticketsCriados    Ticket[]  @relation("SolicitanteTickets")
  ticketsAtribuidos Ticket[]  @relation("ResponsavelTickets")
}

model Prioridade {
  id        String   @id @default(cuid())
  descricao String   @unique
  tickets   Ticket[]
}

model Tipo {
  id        String   @id @default(cuid())
  descricao String   @unique
  tickets   Ticket[]
}

model Ambiente {
  id        String   @id @default(cuid())
  descricao String   @unique
  tickets   Ticket[]
}

model Origem {
  id        String   @id @default(cuid())
  descricao String   @unique
  tickets   Ticket[]
}

model Situacao {
  id        String   @id @default(cuid())
  descricao String   @unique
  tickets   Ticket[]
}

model Menu {
  id              String   @id @default(cuid())
  titulo          String
  nomeIcone       String
  menuPrincipalId String?
  isAtivo         Boolean  @default(true)
  path            String
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  menuPrincipal   Menu?    @relation("SubMenus", fields: [menuPrincipalId], references: [id])
  subMenus        Menu[]   @relation("SubMenus")
}

model Ticket {
  id                  String    @id @default(cuid())
  numeroTicket        String    @unique
  problemDescription  String
  inicioAtendimento   DateTime?
  terminoAtendimento  DateTime?
  resolutionDetails   String?
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt

  prioridadeId        String
  prioridade          Prioridade @relation(fields: [prioridadeId], references: [id])

  tipoId              String
  tipo                Tipo       @relation(fields: [tipoId], references: [id])

  ambienteId          String
  ambiente            Ambiente   @relation(fields: [ambienteId], references: [id])

  origemId            String
  origem              Origem     @relation(fields: [origemId], references: [id])

  solicitanteId       String
  solicitante         Usuario    @relation("SolicitanteTickets", fields: [solicitanteId], references: [id])

  responsavelId       String?
  responsavel         Usuario?   @relation("ResponsavelTickets", fields: [responsavelId], references: [id])

  situacaoId          String
  situacao            Situacao   @relation(fields: [situacaoId], references: [id])

  ticketEvidencias    TicketEvidencia[]
  ticketAnexos        TicketAnexo[]
}

model TicketEvidencia {
  id          String   @id @default(cuid())
  nome        String   // Original filename
  nomeObjeto  String   // GUID_originalFilename
  tipo        String   @default("outro") // File type/category, defaulting to "outro"
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  ticketId    String
  ticket      Ticket   @relation(fields: [ticketId], references: [id], onDelete: Cascade)

  @@index([ticketId])
}

model TicketAnexo {
  id          String   @id @default(cuid())
  nome        String   // Original filename
  nomeObjeto  String   // GUID_originalFilename
  tipo        String   @default("outro") // File type/category, defaulting to "outro"
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  ticketId    String
  ticket      Ticket   @relation(fields: [ticketId], references: [id], onDelete: Cascade)

  @@index([ticketId])
}
